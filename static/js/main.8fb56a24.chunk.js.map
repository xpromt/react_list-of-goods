{"version":3,"sources":["components/Goods.tsx","components/SelectList.tsx","App.tsx","index.tsx"],"names":["Goods","goods","className","map","good","SelectedList","state","select","this","num","value","React","Component","goodsFromServer","App","goodsList","start","reverseList","sortBy","selectValue","setState","reverse","sortAlphabet","sortLength","reset","event","target","visibleList","filter","length","sort","g1","g2","localeCompare","type","onClick","onChange","ReactDOM","render","document","getElementById"],"mappings":"uQAOaA,EAAQ,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MACtB,OACE,oBAAIC,UAAU,QAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,OAAzB,SACGE,GADMA,SCTXC,E,4MACJC,MAAQ,CACNC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,K,4CAGtC,WACE,IAAQA,EAAWC,KAAKF,MAAhBC,OAER,OACE,mCACGA,EAAOJ,KAAI,SAAAM,GAAG,OACb,wBAAkBC,MAAOD,EAAzB,SAA+BA,GAAlBA,Y,GAXIE,IAAMC,WAkBlBP,ICfTQ,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWIC,E,4MACJR,MAAe,CACbS,UAAW,GACXC,OAAO,EACPC,aAAa,EACbC,OAAQ,GACRC,YAAa,G,EAGfH,MAAQ,WACN,EAAKI,SAAS,CACZL,UAAWF,EACXG,OAAO,K,EAIXK,QAAU,WACR,EAAKD,UAAS,SAAAd,GAAK,MAAK,CACtBW,aAAcX,EAAMW,iB,EAIxBK,aAAe,WACb,EAAKF,UAAS,iBAAO,CACnBF,OAAQ,gB,EAIZK,WAAa,WACX,EAAKH,UAAS,iBAAO,CACnBF,OAAQ,c,EAIZM,MAAQ,WACN,EAAKJ,SAAS,CACZH,aAAa,EACbC,OAAQ,GACRC,YAAa,K,EAIjBZ,OAAS,SAACkB,GACR,EAAKL,SAAS,CACZD,aAAcM,EAAMC,OAAOhB,S,4CAI/B,WACE,MAMIF,KAAKF,MALPS,EADF,EACEA,UACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,OACAC,EALF,EAKEA,YAGIQ,EAAwBZ,EAAUa,QACtC,SAAAxB,GAAI,OAAIA,EAAKyB,QAAUV,KAkBzB,OAfAQ,EAAYG,MAAK,SAACC,EAAIC,GACpB,OAAQd,GACN,IAAK,WACH,OAAOa,EAAGE,cAAcD,GAC1B,IAAK,SACH,OAAOD,EAAGF,OAASG,EAAGH,OACxB,QACE,OAAO,MAITZ,GACFU,EAAYN,UAIZ,sBAAKnB,UAAU,MAAf,UACE,uCACA,wBACEgC,KAAK,SACLhC,UAAWc,EAAQ,iBAAmB,SACtCmB,QAAS3B,KAAKQ,MAHhB,mBAQA,wBACEkB,KAAK,SACLhC,UAAYc,EAA2B,SAAnB,iBACpBmB,QAAS3B,KAAKa,QAHhB,oBAQA,wBACEa,KAAK,SACLhC,UAAYc,EAA2B,SAAnB,iBACpBmB,QAAS3B,KAAKc,aAHhB,2BAQA,wBACEY,KAAK,SACLhC,UAAYc,EAA2B,SAAnB,iBACpBmB,QAAS3B,KAAKe,WAHhB,yBAQA,wBACEW,KAAK,SACLhC,UAAYc,EAA2B,SAAnB,iBACpBmB,QAAS3B,KAAKgB,MAHhB,mBAQA,wBAAQU,KAAK,SAAShC,UAAWc,EAAQ,SAAW,iBAApD,SACE,kCACG,oBACD,wBACEN,MAAOS,EACPiB,SAAU5B,KAAKD,OAFjB,SAIE,cAAC,EAAD,WAKN,cAAC,EAAD,CAAON,MAAO0B,W,GAnIJhB,IAAMC,WAyITE,IChKfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8fb56a24.chunk.js","sourcesContent":["import React from 'react';\nimport './Goods.scss';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const Goods = ({ goods }: Props) => {\n  return (\n    <ul className=\"goods\">\n      {goods.map(good => (\n        <li key={good} className=\"good\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default React.memo(Goods);\n","import React from 'react';\n\nclass SelectedList extends React.Component {\n  state = {\n    select: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n  };\n\n  render() {\n    const { select } = this.state;\n\n    return (\n      <>\n        {select.map(num => (\n          <option key={num} value={num}>{num}</option>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default SelectedList;\n","import React from 'react';\nimport './App.css';\nimport { Goods } from './components/Goods';\nimport SelectedList from './components/SelectList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goodsList: string[],\n  reverseList: boolean,\n  start: boolean,\n  sortBy: string,\n  selectValue: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goodsList: [],\n    start: false,\n    reverseList: false,\n    sortBy: '',\n    selectValue: 1,\n  };\n\n  start = () => {\n    this.setState({\n      goodsList: goodsFromServer,\n      start: true,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      reverseList: !state.reverseList,\n    }));\n  };\n\n  sortAlphabet = () => {\n    this.setState(() => ({\n      sortBy: 'alphabet',\n    }));\n  };\n\n  sortLength = () => {\n    this.setState(() => ({\n      sortBy: 'length',\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      reverseList: false,\n      sortBy: '',\n      selectValue: 1,\n    });\n  };\n\n  select = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      selectValue: +event.target.value,\n    });\n  };\n\n  render() {\n    const {\n      goodsList,\n      start,\n      reverseList,\n      sortBy,\n      selectValue,\n    } = this.state;\n\n    const visibleList: string[] = goodsList.filter(\n      good => good.length >= selectValue,\n    );\n\n    visibleList.sort((g1, g2) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return g1.localeCompare(g2);\n        case 'length':\n          return g1.length - g2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (reverseList) {\n      visibleList.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <button\n          type=\"button\"\n          className={start ? 'button__hidden' : 'button'}\n          onClick={this.start}\n        >\n          Start\n        </button>\n\n        <button\n          type=\"button\"\n          className={!start ? 'button__hidden' : 'button'}\n          onClick={this.reverse}\n        >\n          Revers\n        </button>\n\n        <button\n          type=\"button\"\n          className={!start ? 'button__hidden' : 'button'}\n          onClick={this.sortAlphabet}\n        >\n          Sort alphabet\n        </button>\n\n        <button\n          type=\"button\"\n          className={!start ? 'button__hidden' : 'button'}\n          onClick={this.sortLength}\n        >\n          Sort length\n        </button>\n\n        <button\n          type=\"button\"\n          className={!start ? 'button__hidden' : 'button'}\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n\n        <button type=\"button\" className={start ? 'button' : 'button__hidden'}>\n          <label>\n            {'Name longer then '}\n            <select\n              value={selectValue}\n              onChange={this.select}\n            >\n              <SelectedList />\n            </select>\n          </label>\n        </button>\n\n        <Goods goods={visibleList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}